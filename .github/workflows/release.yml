on:
  push:
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: release

jobs:
  create_release:
    name: create release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
  build:
    name: build release
    runs-on: ubuntu-22.04
    needs: create_release
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          sparse-checkout: |
            .gitignore
            .github
            .git

      - name: get release version
        id: release-version
        run: |
          echo "$GITHUB_REF_NAME" | sed 's|^[a-zA-Z]\+|RELEASE_VERSION=|' >> $GITHUB_OUTPUT

      # create asset {{
      - name: create tar archive
        run: |
          cd .. &&
          cp -rp ${{ github.event.repository.name }} ${{ github.event.repository.name }}-${{ steps.release-version.outputs.RELEASE_VERSION }} &&
          tar \
            --create \
            --gzip \
            --verbose \
            --exclude='.gitignore' \
            --exclude='.github' \
            --exclude='.git' \
            --file=${{ github.event.repository.name }}-${{ steps.release-version.outputs.RELEASE_VERSION }}.tar.gz \
            ${{ github.event.repository.name }}-${{ steps.release-version.outputs.RELEASE_VERSION }}
      # }}

      - name: debug
        run: |
          ls -al ./
          ls -al ../

      # upload-release-asset {{
      - name: upload-release-asset tar.gz
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./${{ github.event.repository.name }}-${{ steps.release-version.outputs.RELEASE_VERSION }}.tar.gz
          asset_name: ${{ github.event.repository.name }}-${{ steps.release-version.outputs.RELEASE_VERSION }}.tar.gz
          asset_content_type: application/gzip
      # }}
